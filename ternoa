#!/bin/bash

TERNOA_VERSION="1.3.2"
TERNOA_ENV="mainnet"

DOWNLOAD_URL="https://github.com/capsule-corp-ternoa/ternoa-node/releases/download/v${TERNOA_VERSION}/ternoa"

_divider="--------------------------------------------------------------------------------"
_prompt=">>>"
_indent="   "

validator_name=""
short_name=""
port_number=0

cat 1>&2 <<EOF
                                  Welcome to TERNOA installer 

$_divider
This script fork from https://packages.ternoa.network/ternoa/installer
Website: https://ternoa.com
Docs: https://ternoa-2.gitbook.io/ternoa-testnet-guide/
Support : https://ternoahelp.zendesk.com/hc/en-150
$_divider

EOF

echo "$_prompt We'll be installing Ternoa via a pre-built archive at ${DOWNLOAD_URL}/"

# Check architecture
if [ $(arch) != "x86_64" ]; then
    echo "$_prompt This binary can only be run on x86 architecture."
    echo "$_prompt Exiting..."
    exit 1
fi

# Pre-requisites installation
echo "$_prompt Installing pre-requisites..."
sudo apt update
sudo apt install build-essential git cmake protobuf-compiler -y
echo "$_prompt Pre-requisites installed successfully."

PS3='Please choose the ternoa chain environment: '
select opt in Alphanet Mainnet
do
    case $opt in
        Alphanet)
            echo "Connecting to Alphanet ...";
            TERNOA_ENV="alphanet"; break
            ;;
        Mainnet)
            echo "Connecting to Mainnet ...";
            TERNOA_ENV="mainnet";  break
            ;;
        *) 
            echo "invalid option $REPLY"; 
            exit 1 
            ;;   
    esac
done

while true; do
    read -rp "Enter Your Validator (REAL) Name: " validator_name  </dev/tty
    if [[ ! -z "$validator_name" ]] ; then
        break ;
    fi
done

while true; do
    read -rp "Enter Your Common (SHORT) Name (no space): " short_name  </dev/tty
    if [[ ! -z "$short_name" ]] ; then
        break ;
    fi
done

while true; do
    read -rp "Enter the port number: " port_number </dev/tty

    # Check if the input is not empty and is a valid port number (in the range 1-65535)
    if [[ ! -z "$port_number" ]] && [[ "$port_number" =~ ^[1-9][0-9]{0,4}$ && "$port_number" -ge 1 && "$port_number" -le 65535 ]]; then
        break
    else
        echo "Invalid port number. Please enter a valid port number between 1 and 65535."
    fi
done


# Download Ternoa binary
sudo wget "$DOWNLOAD_URL" -O /usr/bin/ternoa
sudo chmod +x "/usr/bin/ternoa"

# Create directory for Ternoa node data
sudo mkdir -p "/opt/ternoa/node-data-${short_name}"

# Create systemd service file
sudo tee /etc/systemd/system/ternoa-${short_name}.service > /dev/null <<EOT
[Unit]
Description=Ternoa Validator Node By Ternoa.com

[Service]
ExecStart=/usr/bin/ternoa --name "${validator_name}" --chain ${TERNOA_ENV} --base-path /opt/ternoa/node-data-${short_name} --ws-max-connections 1000 --prometheus-port 9615 --validator --telemetry-url "wss://telemetry.polkadot.io/submit/ 0" --state-pruning archive --port ${port_number}
WorkingDirectory=/usr/bin
KillSignal=SIGINT
TimeoutStopSec=infinity
User=root
Restart=on-failure
RestartSec=10s
LimitNOFILE=10240
SyslogIdentifier=ternoa-${short_name}

[Install]
WantedBy=multi-user.target
EOT

# Reload systemd and start Ternoa service
sudo systemctl daemon-reload
sudo systemctl enable ternoa-${short_name}
sudo systemctl start ternoa-${short_name}

printf "%s Install succeeded!\n" "$_prompt"
printf "\n"
printf "%s You can restart ternoa service using : systemctl restart ternoa-${short_name}\n"
printf "%s You can get the status of ternoa service using : systemctl status ternoa-${short_name}\n"
printf "%s You can stop ternoa service using : systemctl stop ternoa-${short_name}\n"
printf "\n"
printf "%s More information at https://ternoa-2.gitbook.io/ternoa-testnet-guide/\n" "$_prompt"
